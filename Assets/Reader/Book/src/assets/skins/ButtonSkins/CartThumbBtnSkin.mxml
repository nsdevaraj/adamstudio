<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

@see spark.components.Button

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5" minWidth="18" minHeight="17">
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.Button")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[         
			/* Define the skin elements that should not be colorized. 
			For button, the graphics are colorized but the label is not. */
			  
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor = true;
				super.initializationComplete();
			}  
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				var cr:Number = getStyle("cornerRadius");
				
				/* if (cornerRadius != cr)
				{
				cornerRadius = cr;
				shadow.radiusX = cornerRadius;
				fill.radiusX = cornerRadius;
				lowlight.radiusX = cornerRadius;
				highlight.radiusX = cornerRadius;
				border.radiusX = cornerRadius;
				}
				
				if (highlightStroke) highlightStroke.radiusX = cornerRadius;
				if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
				if (hldownstroke2) hldownstroke2.radiusX = cornerRadius; */
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			private var cornerRadius:Number = 2;
		]]>        
	</fx:Script>
	<fx:Declarations>
		<s:DropShadowFilter id="outerFilter"
							color="0x000000"
							distance="1"
							blurX="1"
							blurY="1"
							alpha=".3"
							strength="1"/>
	</fx:Declarations>
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />
	</s:states>
	<s:Rect left="0" right="0" top="0" bottom="0" filters="{[outerFilter]}" filters.over="{[]}">
		<s:fill>
			<s:SolidColor color="#ffffff" alpha.over="1" alpha=".85"/>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke  color="#adadad" />
		</s:stroke>
	</s:Rect>
	<s:BitmapImage horizontalCenter="0" verticalCenter="0"
		source.up="{hostComponent.getStyle('upSkin')}"
		source.over="{hostComponent.getStyle('overSkin')}"
		source.down="{hostComponent.getStyle('downSkin')}"
		source.disabled="{hostComponent.getStyle('disabledSkin')}" />
	<!-- layer 8: text -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	
	
</s:SparkSkin>
