<?xml version="1.0" encoding="utf-8"?>
<!--- A skin class for a Spark TitleWindow container which supports resizing the window.

	 @see spark.skins.spark.TitleWindowCloseButtonSkin
	 @see spark.components.TitleWindow
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
	minHeight="150"
	minWidth="200"
	creationComplete="created(event)"
	alpha.disabled="0.5"
	alpha.disabledWithControlBar="0.5"
	blendMode="normal"
	mouseEnabled="false" xmlns:resize1="assets.skins.resize.*">

	<fx:Metadata>
		<![CDATA[ 
        /** @copy spark.skins.spark.ApplicationSkin#hostComponent */
        [HostComponent("spark.components.TitleWindow")]
        ]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized.
		 For panel, border and title background are skinned, but the content area and title text are not. */
		static private const exclusions:Array = ["background", "titleDisplay", "contentGroup"];

		private var cornerRadius:Number;

		override public function get colorizeExclusions():Array {
			return exclusions;
		}

		override protected function initializationComplete():void {
			useChromeColor = true;
			super.initializationComplete();
		}

		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
			 
			super.updateDisplayList(unscaledWidth, unscaledHeight);
		}

		 
	</fx:Script>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;

			/* [Bindable]
			public var resizeManager:ResizeManager; */

			[Bindable]
			public var moveManager:MoveManager;

			private function created(event:FlexEvent):void {
				if (hostComponent.minWidth == 0) {
					hostComponent.minWidth = minWidth;
				}
				if (hostComponent.minHeight == 0) {
					hostComponent.minHeight = minHeight;
				}
				//resizeManager = new ResizeManager(hostComponent, resizeHandle);
				moveManager = new MoveManager(hostComponent, moveArea);
			}
		]]>
	</fx:Script>
<fx:Declarations>
	
</fx:Declarations>
	<s:states>
		<s:State name="normal"/>
		<s:State name="inactive"
			stateGroups="inactiveGroup"/>
		<s:State name="disabled"/>
		<s:State name="normalWithControlBar"
			stateGroups="withControls"/>
		<s:State name="inactiveWithControlBar"
			stateGroups="withControls, inactiveGroup"/>
		<s:State name="disabledWithControlBar"
			stateGroups="withControls"/>
	</s:states>
	
	 
	<s:Group bottom="0" left="0" right="0" top="0" >
		<s:filters>
			<s:DropShadowFilter id="dropShadow"
								color="0x000000"
								alpha="0.32"
								alpha.inactiveGroup="0.22"
								angle="90"
								blurX="5"
								blurY="5"
								distance="2"
								distance.inactiveGroup="7"/>
		</s:filters>
		<s:Rect radiusX="10" radiusY="10" id="background" bottom="0" left="0" right="0" top="0">
			<s:fill> <s:SolidColor id="backgroundFill" color="#cde2f5"/> </s:fill><!---->
		</s:Rect>
		<s:Rect radiusX="10" radiusY="10" top="25" right="25" left="25" bottom="25">
			<s:stroke>
				<s:SolidColorStroke color="#ffffff" />
			</s:stroke>
		</s:Rect>
		<!-- layer 3: contents -->
		<!--- Contains the vertical stack of title bar content and control bar. -->
		<s:Group id="contents" bottom="10" left="28" right="28" top="1">
			<s:layout> 	<s:VerticalLayout horizontalAlign="justify" gap="0"/> </s:layout>
			<!--- @private -->
			<s:Group id="topGroup" >
				<s:Rect width="{titleDisplay.width + 15}" horizontalCenter="0" height="30" top="10">
					<s:fill> <s:SolidColor color="#8B8B8B"/> </s:fill><!---->
				</s:Rect>
				<s:Label id="titleDisplay"
					minHeight="30"
					bottom="0"
					fontWeight="bold"
					horizontalCenter="0"
					top="10"
					verticalAlign="middle"
					maxDisplayedLines="1"/>

				<!-- layer 4: moveArea -->
				<!--- @copy spark.components.TitleWindow#moveArea -->
				<s:Group id="moveArea" visible="false" bottom="0" left="0" right="0" top="0">
					<resize1:DragHandle left="4" verticalCenter="0" dotColor="#8B8B8B" fillAlpha="0"/>
				</s:Group>
				<!--- @copy spark.components.TitleWindow#closeButton -->
				<s:Button id="closeButton" height="15" width="15" right="7" top="7" visible="false"
					skinClass="spark.skins.spark.TitleWindowCloseButtonSkin"/>
			</s:Group>
			<s:Group id="contentGroup"
				height="100%"
				minHeight="0"
				minWidth="0"
				width="100%">
			</s:Group>

			<!--- @private -->
			<s:Group id="bottomGroup"
				includeIn="withControls"
				minHeight="0"
				minWidth="0"><!--
				<s:Rect width="{controlBarGroup.width }" height="10" verticalCenter="0" x="{controlBarGroup.x}">
					<s:fill> <s:SolidColor color="#cde2f5"/> </s:fill>
				</s:Rect>-->
				<!--- @copy spark.components.Panel#controlBarGroup -->
				<s:Group id="controlBarGroup"
					minHeight="0"
					minWidth="0"
					bottom="1"
					 horizontalCenter="0"
					top="1">
					<s:layout>
						<s:HorizontalLayout paddingBottom="7"
							paddingLeft="10"
							paddingRight="10"
							paddingTop="7"
							gap="5"/>
					</s:layout>
				</s:Group>
			</s:Group>
		</s:Group>
	</s:Group> 
</s:SparkSkin>
