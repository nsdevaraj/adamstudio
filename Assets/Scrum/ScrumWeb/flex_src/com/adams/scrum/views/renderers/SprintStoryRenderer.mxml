<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:components="com.adams.scrum.views.components.*">
	<fx:Script>
		<![CDATA[ 			 
			import com.adams.scrum.models.vo.Products;
			import com.adams.scrum.models.vo.Sprints;
			import com.adams.scrum.models.vo.Stories;
			import com.adams.scrum.utils.Utils;
			import com.adams.scrum.views.components.NativeList;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;  
			public static var currentProduct:Products;
			/**
 			 * The function to handle story select event
 			 * the current story is selected for the current sprint
 			 * <p>
 			 * In addition, it dispatches signal to the owner of the renderer
 			 * </p>
			 */			
			protected function configBtn_clickHandler(event:MouseEvent):void
			{
				if(sprintConfigBtn.label == "Select")
				{
					Object( owner ).renderSignal.dispatch(NativeList.STORYSELECTED);
				}else{
					Object( owner ).renderSignal.dispatch(NativeList.STORYDESELECTED);
				}
			} 			
			/**
 			 * <p>
 			 * The renderer data initiated
 			 * </p>
			 */	
			private var story:Stories
			override public function set data(value:Object):void
			{
			  super.data = value;
			  if(value){
				  story = value as Stories;
				 if(story.productObject==null) story.productObject = currentProduct;
			  	 storyLbl.text = Utils.expandStory(story);
				 sprintConfigBtn.label = getEnabled(currentSprint.storySet);
				 callLater( setLabel,[currentSprint.storySet]);
				 
				 sprintConfigBtn.visible = visibleSelectDeselect();
			  }
			}
			
			[Bindable]
			private static var _currentSprint:Sprints;
			
			public static function get currentSprint():Sprints
			{
				return _currentSprint;
			}
			
			public static function set currentSprint(value:Sprints):void
			{ 
				_currentSprint =value;	 
			}
			
			protected function setLabel(storySet:ArrayCollection):void{
				sprintConfigBtn.label = getEnabled(storySet);
			}
			protected function getEnabled(storySet:ArrayCollection):String
			{
				var bool:String = 'Select'; 
				for each(var iterStory:Stories in storySet){
					if(iterStory.storyId == story.storyId)
					{
						bool ='Deselect';
						break;
					}
				}	 
				return bool;
			}
			private function visibleSelectDeselect():Boolean{	
				return Object(owner).selectDeselectRendererProperty;
			}
		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle"
							paddingLeft="0" paddingRight="0"
							paddingTop="1" paddingBottom="0" />
	</s:layout>
	 
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	<s:Group width="100%" height="100%">
		<s:HGroup verticalAlign="middle" top="1" bottom="0" left="5" right="5">
			<s:Label id="storyLbl"   
					 width="100%" 
					 maxDisplayedLines="1"
					 showTruncationTip="true" />
			<components:NativeButton id="sprintConfigBtn" label="{getEnabled(_currentSprint.storySet)}" 
									 styleName="OkIcon" click="configBtn_clickHandler(event)"
									 visible="{visibleSelectDeselect()}"/>
		</s:HGroup>
		</s:Group>
</s:ItemRenderer>