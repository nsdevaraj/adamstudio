package com.adams.dt.dao;
import java.util.Date;
import java.util.List;   
public interface DTInterface extends IGenericDAO<Object, Integer>{
	List<?> findByName(String name)throws BaseAppException;
	List<?> findByNames(String name1,String name2)throws BaseAppException;
	List<?> findByCode(String name)throws BaseAppException;
	List<?> findByNameId(String name,int id); 
	List<?> findByIdName(int id,String name); 
	List<?> findById(int subnum);
	List<?> findMaxTaskId(int subnum);
	List<?> findByNums(int subnum1,int subnum2);
	List<?> findByList()throws BaseAppException;
	List<?> findAll()throws BaseAppException;
	List<?> findByDate(Date date, int id);
	List<?> findByDateBetween(Date startDate, Date endDate)throws BaseAppException;
	List<?> findByDateEnd(Date date, int id);
	List<?> findByDateBetweenEnd(Date startDate, Date endDate)throws BaseAppException;
	List<?> findByPersonId(int id,int id1)throws BaseAppException;
	List<?> findList();
	List<?> findByDomainWorkFlow(int o)throws BaseAppException;
	List<?> findByChatList(int id,int id1,int id2)throws BaseAppException;
	List<?> findChatUserList(int senid1,int recid1,int senid2,int recid2,int projid)throws BaseAppException;
	List<?> findWorkflowList(int domainfk)throws BaseAppException;
	List<?> findTasksList(int projectfk)throws BaseAppException; 
	List<?> findNotesList(int taskfk)throws BaseAppException;
	List<?> findPersonsList(int projectid)throws BaseAppException;
	List<?> findProfilesList(int projectid)throws BaseAppException;
	List<?> findDomain(String code)throws BaseAppException; 
	List<?> findByProfile(int profilefk)throws BaseAppException; 
	List<?> findByWorkFlowId(int workFlowfk)throws BaseAppException;
	List<?> findByStopLabel(String str)throws BaseAppException;
	List<?> findWorkflow(int categoryId)throws BaseAppException;
	List<?> findByMailPersonId(int perid)throws BaseAppException;
	List<?> findMailList(int projectfk)throws BaseAppException;
	List<?> findByMailProfileId(int profileid)throws BaseAppException;
	List<?> findMaxTaskId()throws BaseAppException;
	List<?> findByTaskId(int id)throws BaseAppException;
	List<?> findByTeamLinesId(int profilefk,int projectfk);
	List<?> findByMailFileId(int fileId);
	List<?> findProjectId(int proId);
	List<?> findIMPEmail(String name)throws BaseAppException;	
	List<?> findByEmailId(String name)throws BaseAppException;
	List<?> findByNameFileId(String name,int projid,int fileid); 
	List<?> findByIndProjId(String name,int projid);	
}
