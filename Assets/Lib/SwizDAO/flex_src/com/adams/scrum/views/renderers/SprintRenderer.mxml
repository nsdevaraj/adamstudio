<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:components="com.adams.scrum.views.components.*" width="100%" height="100%">
	<fx:Script>
		<![CDATA[ 			 
			import com.adams.scrum.models.vo.Sprints;
			import com.adams.scrum.utils.Utils;
			import com.adams.scrum.views.components.NativeList;
			
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			/**
 			 * The function to handle edit sprint event
 			 * 
 			 * <p>
 			 * In addition, it dispatches signal to the owner of the renderer
 			 * </p>
			 */			
			protected function configBtn_clickHandler(event:MouseEvent):void
			{
				Object(owner).renderSignal.dispatch(NativeList.SPRINTEDITED);
			}
			/**
 			 * The function to handle open sprint event
 			 * 
 			 * <p>
 			 * In addition, it dispatches signal to the owner of the renderer
 			 * </p>
			 */			
			protected function openBtn_clickHandler(event:MouseEvent):void
			{
				Object(owner).renderSignal.dispatch(NativeList.SPRINTOPENED);
			}
			/**
 			 * The function to handle delete sprint event
 			 * 
 			 * <p>
 			 * In addition, it dispatches signal to the owner of the renderer
 			 * </p>
			 */			
			protected function deleteBtn_clickHandler(event:MouseEvent):void
			{
				Object(owner).renderSignal.dispatch(NativeList.SPRINTDELETED);
			} 
			private var sprint:Sprints;
			override public function set data(value:Object):void
			{
				super.data = value;
				if(value){
					sprint = value as Sprints;
					sprintNameLbl.text = sprint.sprintLabel;
					sprintStatusBtn.styleName = Utils.getStatusSkinName(sprint.sprintStatusFk,Utils.SPRINT);
					
					sprintDeleteBtn.visible = visibleRemoveButton();
				}
			}
			private function visibleRemoveButton():Boolean{	
				return Object(owner).removeRendererProperty;
			}			
		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle"
							paddingLeft="0" paddingRight="0"
							paddingTop="1" paddingBottom="0" />
	</s:layout>
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	<s:Group width="100%" height="100%" id="parentGroup" clipAndEnableScrolling="true">
		<s:Button id="sprintStatusBtn" left="0" verticalCenter="0"/>
		<s:Label id="sprintNameLbl" text="{data.sprintLabel}" 
				 maxDisplayedLines="1"  right="{btnCtrls.width+10}" 
				 showTruncationTip="true" 
				 left="20" verticalCenter="0" />
		<s:HGroup verticalAlign="middle" id="btnCtrls" right="5" height="100%">
			<components:NativeButton id="sprintConfigBtn" label="Config" styleName="ConfigIcon" 
									 click="configBtn_clickHandler(event)" />
			<components:NativeButton id="sprintOpenBtn" label="Open" styleName="OpenIcon" 
									 click="openBtn_clickHandler(event)" />
			<components:NativeButton id="sprintDeleteBtn" label="Delete" styleName="DeleteSkin" 
									 click="deleteBtn_clickHandler(event)"/>
		</s:HGroup>
		</s:Group>
</s:ItemRenderer>