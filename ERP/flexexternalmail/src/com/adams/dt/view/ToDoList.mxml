<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	width="100%"
	height="100%" creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import mx.events.CollectionEventKind;
			import mx.events.CollectionEvent;
			import com.adams.dt.model.vo.Propertiespresets;
			import com.adams.dt.model.vo.Workflows;
			import com.adams.dt.event.PropertiespresetsEvent;
			import com.adams.dt.model.vo.Categories;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.adams.dt.event.OpenToDoListScreenEvent;
			import mx.collections.ArrayCollection;
			import com.adams.dt.model.vo.Projects;
			import com.adams.dt.model.vo.Tasks;
			import mx.controls.Alert;
			import com.adams.dt.model.ModelLocator;
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			private var _dataProvider:ArrayCollection = new ArrayCollection();
			
			public function get dataProvider():ArrayCollection{	  			
				return _dataProvider;
			}
			
			public function set dataProvider(arrC:ArrayCollection):void{
				_dataProvider = arrC;				
				updateChildren();
			} 
			public function init():void{ 	
				model.taskCollection.addEventListener(CollectionEvent.COLLECTION_CHANGE,updateList);
			}
			public function updateList(event:CollectionEvent):void{
				_dataProvider = model.taskCollection;
				updateChildren();
			}
		
			private function updateChildren():void{ 				
				domains.removeAllChildren();  
				for each(var item:Object in _dataProvider){	
					var component:ListComponent = new ListComponent();
					component.taskData = ArrayCollection(item.tasks);
					component.domainLabel = item.domain.categoryName;
					domains.addChild(component);
				}
			}
				
		]]>
	</mx:Script>
	<mx:Canvas width="100%" height="100%" id="mesgStage" borderStyle="solid" borderColor="#272727">
		<mx:Accordion id="domains" width="100%" height="100%"/>
	</mx:Canvas>
</mx:Canvas>