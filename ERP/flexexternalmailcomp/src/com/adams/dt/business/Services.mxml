<?xml version="1.0" encoding="utf-8"?>
<cairngorm:ServiceLocator xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:cairngorm="com.universalmind.cairngorm.business.*">
	<mx:Script>
		<![CDATA[
    		import com.adams.dt.model.ModelLocator; 
    		import mx.rpc.events.InvokeEvent;
    		
    		public static const TASK_SERVICE:String = 'mail'; //task
    		public static const FILE_DETAIL_SERVICE:String = 'mailFile';
    		public static const WORKFLOW_TEMPLATE_SERVICE:String = 'mailworkflowstemplates';
    		public static const PERSON_SERVICE:String = 'personmail';
    		
    		public static const PROPERTY_PRESET_SERVICE:String = 'mailpropertiespreset';
    		public static const PHASE_SERVICE:String = 'mailphases';
    		public static const PROJECT_SERVICE:String = 'mailproject';
    		public static const PROPERTIES_PJ_SERVICE:String = 'mailpropertiespj';
    		public static const UPLOAD_SERVICE:String = 'fileIOdownload';
    		public static const PROFILE_SERVICE:String = 'mailprofiles';
    		public static const TEAMLINE_SERVICE:String = 'mailteamline';
    		public static const TRANSLATE_SERVICE:String = 'translate';
    		public static const LANG_SERVICE:String = 'lang';
    		public static const CATEGORY_SERVICE:String = 'mailcategory';
    		public static const STATUS_SERVICE:String = 'mailstatus';
    		public static const EVENT_SERVICE:String = 'mailevents';
    		public static const PRESETTEMPLATE_SERVICE:String = 'mailpresetTemplate';
    		public static const PHASE_TEMPLATE_SERVICE:String = 'mailphasestemplate';
    		
    		/* public static const GROUP_SERVICE:String = 'groups';
    		public static const GROUPPERSON_SERVICE:String = 'groupPersons';
    		public static const PERSON_SERVICE:String = 'person';
    		public static const UPLOAD_SERVICE:String = 'remoteUpload';
    		public static const LANG_SERVICE:String = 'lang';
    		public static const CHAT_SERVICE:String = 'chat';
    		public static const PROJECT_SERVICE:String = 'project';
    		public static const CATEGORY_SERVICE:String = 'category';
    		public static const COMPANY_SERVICE:String = 'companies';
    		public static const EVENT_SERVICE:String = 'events';
    		public static const PHASE_SERVICE:String = 'phases';
    		public static const MODULE_SERVICE:String = 'module';
    		public static const PHASE_TEMPLATE_SERVICE:String = 'phasestemplate';
    		public static const PROPERTIES_PJ_SERVICE:String = 'propertiespj';
    		public static const PROPERTY_PRESET_SERVICE:String = 'propertiespresets';
    		public static const PROFILE_SERVICE:String = 'profiles';
    		public static const STATUS_SERVICE:String = 'status';
    		public static const TASK_SERVICE:String = 'mail'; //task
    		public static const WORKFLOW_SERVICE:String = 'workflows';
    		public static const WORKFLOW_TEMPLATE_SERVICE:String = 'workflowstemplates';
    		public static const NOTE_SERVICE:String = 'note';
    		public static const FILE_DETAIL_SERVICE:String = 'fileDetail';
    		public static const TAG_SERVICE:String = 'tag';
    		public static const TEAM_TEMPLATE_SERVICE:String = 'teamtemplate';
    		public static const TEAMLINE_TEMPLATE_SERVICE:String = 'teamlinestemplate';
    		public static const TEAMLINE_SERVICE:String = 'teamline';
    		public static const DIRECTORY_SERVICE:String = 'directory';
    		public static const TRANSLATE_SERVICE:String = 'translate';
    		public static const DOMAIN_SERVICE:String = 'domainworkflow';
    		public static const PAGE_SERVICE:String = 'paging';
    		public static const IMPREMIUR_SERVICE:String = 'impremiur';
    		public static const PROP_PRESET_TEMPLATE_SERVICE:String = 'PropPresetTemplate';
    		public static const PRESETTEMPLATE_SERVICE:String = 'presetTemplate' ;  */
    		[Bindable]
			private var model : ModelLocator = ModelLocator.getInstance();
			private function serviceInvoked(event:mx.rpc.events.InvokeEvent):void{
				var timeStamp:Date = model.currentTime;
				var diffmins:int = -(model.serverLastAccessedAt.time - timeStamp.time)/60000;
 				model.serverLastAccessedAt = timeStamp;
 				//(diffmins>1)? model.bgUploadFile.idle=true:model.bgUploadFile.idle=false;
				trace(event.currentTarget.toString()+ ' here ' )
			} 
    	]]>
	</mx:Script> 
	<mx:Producer id="personchatstatus" destination="chatmessage" channelSet="{model.pushchannelset}" />
	<mx:Consumer id="personchatinstatus" destination="chatmessage" channelSet="{model.pushchannelset}" />
	
	<mx:RemoteObject showBusyCursor="true"
		id="mail" invoke="serviceInvoked(event)"
		destination="mail" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailpropertiespreset" invoke="serviceInvoked(event)"
		destination="mailpropertiespreset" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailphases" invoke="serviceInvoked(event)"
		destination="mailphases" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailproject" invoke="serviceInvoked(event)"
		destination="mailproject" concurrency="single"
		channelSet="{model.channelSet}"/>	
	<mx:RemoteObject showBusyCursor="true"
		id="mailpropertiespj" invoke="serviceInvoked(event)"
		destination="mailpropertiespj" concurrency="single"
		channelSet="{model.channelSet}"/>	
	<mx:RemoteObject showBusyCursor="true"
		id="mailFile" destination="mailFile" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject id="fileIOdownload" showBusyCursor="true"
		destination="fileIOdownload" channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailworkflowstemplates" invoke="serviceInvoked(event)"
		destination="mailworkflowstemplates" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="personmail" invoke="serviceInvoked(event)"
		destination="personmail" concurrency="single"
		channelSet="{model.channelSet}"/> 	
	<mx:RemoteObject showBusyCursor="true"
		id="mailprofiles" invoke="serviceInvoked(event)"
		destination="mailprofiles" concurrency="single"
		channelSet="{model.channelSet}"/>	
	<mx:RemoteObject showBusyCursor="true"
		id="mailteamline" invoke="serviceInvoked(event)"
		destination="mailteamline" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="lang" invoke="serviceInvoked(event)"
		destination="maillang" concurrency="single"
		channelSet="{model.langChannelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailcategory" invoke="serviceInvoked(event)"
		destination="mailcategory" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailstatus" invoke="serviceInvoked(event)"
		destination="mailstatus" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailevents" invoke="serviceInvoked(event)"
		destination="mailevents" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailpresetTemplate" invoke="serviceInvoked(event)"
		destination="mailpresetTemplate" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="mailphasestemplate" invoke="serviceInvoked(event)"
		destination="mailphasestemplate" concurrency="single"
		channelSet="{model.channelSet}"/>
		
	<mx:HTTPService id="translate" invoke="serviceInvoked(event)"
		url="{model.GOOGLETEXT + model.TSOURCE+model.textSource + model.LANPAIR + model.currentTranslation.sourceLanguage+model.PAIRCODE+model.destLanguage}"
		useProxy="false" concurrency="single"
		showBusyCursor="true"
		resultFormat="text"/>		
			
	
	<!--<mx:Producer id="adminchannelpushin" destination="adminmessage" channelSet="{model.pushadminchannelset}" />
	<mx:Consumer id="adminchannelpushout" destination="adminmessage" channelSet="{model.pushadminchannelset}" />
	
	<mx:RemoteObject showBusyCursor="true"
		id="groups" invoke="serviceInvoked(event)"
		destination="group" concurrency="single"
		channelSet="{model.channelSet}"/> 
	<mx:RemoteObject showBusyCursor="true"
		id="person" invoke="serviceInvoked(event)"
		destination="person" concurrency="single"
		channelSet="{model.channelSet}"/> 
	<mx:RemoteObject id="remoteUpload" showBusyCursor="true"
		destination="fileIO" channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="lang" invoke="serviceInvoked(event)"
		destination="lang" concurrency="single"
		channelSet="{model.langChannelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="chat" invoke="serviceInvoked(event)"
		destination="chat" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="project" invoke="serviceInvoked(event)"
		destination="project" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="category" invoke="serviceInvoked(event)"
		destination="category" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="companies" invoke="serviceInvoked(event)"
		destination="company" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="events" invoke="serviceInvoked(event)"
		destination="event" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="phases" invoke="serviceInvoked(event)"
		destination="phase" concurrency="single"
		channelSet="{model.channelSet}"/>
		
	<mx:RemoteObject showBusyCursor="true"
		id="phasestemplate" invoke="serviceInvoked(event)"
		destination="phasestemplate" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="propertiespj" invoke="serviceInvoked(event)"
		destination="propertiespj" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="propertiespresets" invoke="serviceInvoked(event)"
		destination="propertiespreset" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="profiles" invoke="serviceInvoked(event)"
		destination="profile" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="status" invoke="serviceInvoked(event)"
		destination="status" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="task" invoke="serviceInvoked(event)"
		destination="task" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="workflows" invoke="serviceInvoked(event)"
		destination="workflow" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="workflowstemplates" invoke="serviceInvoked(event)"
		destination="workflowstemplate" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="note" invoke="serviceInvoked(event)"
		destination="note" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="fileDetail"	destination="fileDetail" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="tag" invoke="serviceInvoked(event)"
		destination="tags" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="teamtemplate" invoke="serviceInvoked(event)"
		destination="teamtemplate" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="teamlinestemplate" invoke="serviceInvoked(event)"
		destination="teamlinestemplate" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="domainworkflow" invoke="serviceInvoked(event)"
		destination="domainworkflow" concurrency="single"
		channelSet="{model.channelSet}"/>
	<mx:RemoteObject showBusyCursor="true"
		id="teamline" invoke="serviceInvoked(event)"
		destination="teamline" concurrency="single"
		channelSet="{model.channelSet}"/>
		
	<mx:RemoteObject showBusyCursor="true"
		id="groupPersons" invoke="serviceInvoked(event)"
		destination="groupperson" concurrency="single"
		channelSet="{model.channelSet}"/>
	
	<mx:RemoteObject showBusyCursor="true"
		id="module" invoke="serviceInvoked(event)"
		destination="module" concurrency="single"
		channelSet="{model.channelSet}"/>
		
	<mx:RemoteObject showBusyCursor="true"
		id="impremiur" invoke="serviceInvoked(event)"
		destination="impremiur" concurrency="single"
		channelSet="{model.channelSet}"/>
	
	<mx:RemoteObject showBusyCursor="true"
		id="preset_Template" invoke="serviceInvoked(event)"
		destination="preset_Template" concurrency="single"
		channelSet="{model.channelSet}"/>
		
	<mx:RemoteObject showBusyCursor="true"
		id="PropPresetTemplate" invoke="serviceInvoked(event)"
		destination="proppresetstemplates" concurrency="single"
		channelSet="{model.channelSet}"/>
		
	<mx:RemoteObject showBusyCursor="true"
		id="presetTemplate" invoke="serviceInvoked(event)"
		destination="presetstemplates" concurrency="single"
		channelSet="{model.channelSet}"/>
				
		
	 <mx:RemoteObject id="directory" destination="fileIO" channelSet="{ModelLocator.getInstance().channelSet}"/>
	<mx:HTTPService id="translate" invoke="serviceInvoked(event)"
		url="{model.GOOGLETEXT + model.TSOURCE+model.textSource + model.LANPAIR + model.currentTranslation.sourceLanguage+model.PAIRCODE+model.destLanguage}"
		useProxy="false" concurrency="single"
		showBusyCursor="true"
		resultFormat="text"/>-->
</cairngorm:ServiceLocator>